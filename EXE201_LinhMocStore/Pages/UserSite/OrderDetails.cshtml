@page
@model EXE201_LinhMocStore.Pages.UserSite.OrderDetailsModel
@{
    ViewData["Title"] = $"Chi tiết đơn hàng #{Model.Order.OrderId} - Linh Mộc Store";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="order-details-header mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="order-details-title">
                            <i class="fas fa-shopping-bag me-3"></i>Chi tiết đơn hàng #@Model.Order.OrderId
                        </h1>
                        <p class="order-details-subtitle text-muted">
                            Đặt hàng lúc @Model.Order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                        </p>
                    </div>
                    <div class="order-status-badge">
                        <span class="status-badge status-@Model.Order.Status.ToLower()">
                            @GetStatusText(Model.Order.Status)
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Order Items -->
        <div class="col-lg-8">
            <div class="card order-items-card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-box me-2"></i>Sản phẩm đã đặt
                    </h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th style="width: 80px;">Hình ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th class="text-center">Số lượng</th>
                                    <th class="text-end">Đơn giá</th>
                                    <th class="text-end">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>
                                            <img src="@(string.IsNullOrEmpty(item.Product?.Image) ? "/images/no-image.jpg" : item.Product.Image)" 
                                                 alt="@item.Product?.Name" 
                                                 class="order-item-image">
                                        </td>
                                        <td>
                                            <div class="order-item-info">
                                                <h6 class="order-item-name mb-1">@item.Product?.Name</h6>
                                                <small class="order-item-material text-muted">
                                                    <i class="fas fa-gem me-1"></i>@(string.IsNullOrEmpty(item.Product?.Material) ? "Không có thông tin" : item.Product.Material)
                                                </small>
                                            </div>
                                        </td>
                                        <td class="text-center">
                                            <span class="order-item-quantity">@item.Quantity</span>
                                        </td>
                                        <td class="text-end">
                                            <span class="order-item-price">@item.Price.ToString("N0") VNĐ</span>
                                        </td>
                                        <td class="text-end">
                                            <span class="order-item-total">@((item.Quantity * item.Price).ToString("N0")) VNĐ</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Order Timeline -->
            <div class="card order-timeline-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-clock me-2"></i>Lịch sử đơn hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="order-timeline">
                        <div class="timeline-item @(Model.Order.Status != "Cancelled" ? "completed" : "")">
                            <div class="timeline-icon">
                                <i class="fas fa-shopping-cart"></i>
                            </div>
                            <div class="timeline-content">
                                <h6>Đặt hàng</h6>
                                <p>Đơn hàng đã được tạo</p>
                                <small class="text-muted">@Model.Order.OrderDate.ToString("dd/MM/yyyy HH:mm")</small>
                            </div>
                        </div>

                        @if (Model.Order.Status != "Cancelled")
                        {
                            <div class="timeline-item @(Model.Order.Status != "PendingPayment" ? "completed" : "")">
                                <div class="timeline-icon">
                                    <i class="fas fa-credit-card"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6>Thanh toán</h6>
                                    <p>Đơn hàng đã được thanh toán</p>
                                    @if (Model.Payment?.isCompleted == true)
                                    {
                                        <small class="text-muted">@Model.Payment.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</small>
                                    }
                                </div>
                            </div>

                            <div class="timeline-item @(Model.Order.Status == "Completed" || Model.Order.Status == "Shipped" || Model.Order.Status == "Processing" ? "completed" : "")">
                                <div class="timeline-icon">
                                    <i class="fas fa-cog"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6>Đang xử lý</h6>
                                    <p>Đơn hàng đang được xử lý</p>
                                </div>
                            </div>

                            <div class="timeline-item @(Model.Order.Status == "Completed" || Model.Order.Status == "Shipped" ? "completed" : "")">
                                <div class="timeline-icon">
                                    <i class="fas fa-shipping-fast"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6>Đang giao</h6>
                                    <p>Đơn hàng đang được giao</p>
                                </div>
                            </div>

                            <div class="timeline-item @(Model.Order.Status == "Completed" ? "completed" : "")">
                                <div class="timeline-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6>Hoàn thành</h6>
                                    <p>Đơn hàng đã được giao thành công</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="timeline-item completed">
                                <div class="timeline-icon">
                                    <i class="fas fa-times-circle"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6>Đã hủy</h6>
                                    <p>Đơn hàng đã được hủy</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card order-summary-card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-calculator me-2"></i>Tổng đơn hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="order-summary-item">
                        <span>Tạm tính:</span>
                        <span>@Model.OrderDetails.Sum(od => od.Quantity * od.Price).ToString("N0") VNĐ</span>
                    </div>
                    <div class="order-summary-item">
                        <span>Phí vận chuyển:</span>
                        <span>Miễn phí</span>
                    </div>
                    <hr>
                    <div class="order-summary-item order-summary-total">
                        <span>Tổng cộng:</span>
                        <span>@Model.OrderDetails.Sum(od => od.Quantity * od.Price).ToString("N0") VNĐ</span>
                    </div>
                </div>
            </div>

            <!-- Payment Information -->
            @if (Model.Payment != null)
            {
                <div class="card payment-info-card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-credit-card me-2"></i>Thông tin thanh toán
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="payment-info-item">
                            <span>Mã giao dịch:</span>
                            <span class="text-break">@Model.Payment.TransactionCode</span>
                        </div>
                        <div class="payment-info-item">
                            <span>Số tiền:</span>
                            <span>@Model.Payment.Price?.ToString("N0") VNĐ</span>
                        </div>
                        <div class="payment-info-item">
                            <span>Trạng thái:</span>
                            <span class="@(Model.Payment.isCompleted ? "text-success" : "text-warning")">
                                @(Model.Payment.isCompleted ? "Đã thanh toán" : "Chưa thanh toán")
                            </span>
                        </div>
                    </div>
                </div>
            }

            <!-- Order Actions -->
            <div class="card order-actions-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-tools me-2"></i>Thao tác
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (Model.Order.Status == "PendingPayment")
                        {
                            <a href="/UserSite/Checkout?OrderId=@Model.Order.OrderId" class="btn btn-primary">
                                <i class="fas fa-credit-card me-2"></i>Tiếp tục thanh toán
                            </a>
                            <form method="post" action="/UserSite/MyOrders">
                                <input type="hidden" name="orderId" value="@Model.Order.OrderId" />
                                <button type="submit" class="btn btn-outline-danger w-100" 
                                        asp-page-handler="CancelOrder"
                                        onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')">
                                    <i class="fas fa-times me-2"></i>Hủy đơn hàng
                                </button>
                            </form>
                        }
                        else if (Model.Order.Status == "AwaitingConfirmation")
                        {
                            <form method="post" action="/UserSite/MyOrders">
                                <input type="hidden" name="orderId" value="@Model.Order.OrderId" />
                                <button type="submit" class="btn btn-outline-danger w-100" 
                                        asp-page-handler="CancelOrder"
                                        onclick="return confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')">
                                    <i class="fas fa-times me-2"></i>Hủy đơn hàng
                                </button>
                            </form>
                        }
                        else if (Model.Order.Status == "Shipped")
                        {
                            <button type="button" class="btn btn-success">
                                <i class="fas fa-check me-2"></i>Đã nhận hàng
                            </button>
                        }
                        
                        <a href="/UserSite/MyOrders" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusText(string status)
    {
        return status switch
        {
            "PendingPayment" => "Chờ thanh toán",
            "AwaitingConfirmation" => "Chờ xác nhận",
            "Processing" => "Đang xử lý",
            "Shipped" => "Đang giao",
            "Completed" => "Hoàn thành",
            "Cancelled" => "Đã hủy",
            _ => status
        };
    }
}

@section Scripts {
    <script>
        // Function to show toast messages (giữ lại để hiển thị thông báo nếu cần)
        function showToast(message, isError = false) {
            const toast = document.createElement('div');
            toast.className = `toast-message ${isError ? 'error' : 'success'}`;
            toast.innerHTML = `
                <i class="fas ${isError ? 'fa-times-circle' : 'fa-check-circle'} me-2"></i>
                ${message}
            `;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
    </script>
}

@section Styles {
    <style>
        /* Order Details Header */
        .order-details-header {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .order-details-title {
            font-size: 2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .order-details-subtitle {
            font-size: 1.1rem;
        }

        /* Status Badge */
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-size: 0.9rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pendingpayment {
            background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
            color: white;
        }

        .status-awaitingconfirmation {
            background: linear-gradient(135deg, #17a2b8 0%, #20c997 100%);
            color: white;
        }

        .status-processing {
            background: linear-gradient(135deg, #007bff 0%, #6610f2 100%);
            color: white;
        }

        .status-shipped {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .status-completed {
            background: linear-gradient(135deg, #6f42c1 0%, #e83e8c 100%);
            color: white;
        }

        .status-cancelled {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
            color: white;
        }

        /* Order Items Card */
        .order-items-card .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .order-item-image {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            object-fit: cover;
        }

        .order-item-name {
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
        }

        .order-item-material {
            font-size: 0.8rem;
        }

        .order-item-quantity {
            font-weight: 600;
            color: #6c757d;
        }

        .order-item-price {
            font-weight: 600;
            color: #667eea;
        }

        .order-item-total {
            font-weight: 700;
            color: #2c3e50;
        }

        /* Order Timeline */
        .order-timeline-card .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .order-timeline {
            position: relative;
            padding-left: 2rem;
        }

        .order-timeline::before {
            content: '';
            position: absolute;
            left: 1rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 2rem;
            padding-left: 2rem;
        }

        .timeline-item:last-child {
            margin-bottom: 0;
        }

        .timeline-icon {
            position: absolute;
            left: -1rem;
            top: 0;
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
            z-index: 1;
        }

        .timeline-item.completed .timeline-icon {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .timeline-content h6 {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.25rem;
        }

        .timeline-content p {
            color: #6c757d;
            margin-bottom: 0.25rem;
        }

        /* Order Summary */
        .order-summary-card .card,
        .payment-info-card .card,
        .order-actions-card .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .order-summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 1rem;
        }

        .order-summary-total {
            font-size: 1.2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 0;
        }

        .payment-info-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            font-size: 0.9rem;
        }

        .payment-info-item:last-child {
            margin-bottom: 0;
        }

        /* Toast Message */
        .toast-message {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
            color: white;
            padding: 1rem 2rem;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            max-width: 300px;
            white-space: pre-line;
        }

        .toast-message.success {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        }

        .toast-message.error {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        }

        .toast-message.show {
            transform: translateX(0);
        }

        /* Responsive */
        @@media (max-width: 991.98px) {
            .order-details-title {
                font-size: 1.5rem;
            }
            
            .order-details-header {
                padding: 1.5rem;
            }
        }

        @@media (max-width: 767.98px) {
            .order-details-header .d-flex {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .order-summary-item,
            .payment-info-item {
                flex-direction: column;
                gap: 0.25rem;
            }
        }
    </style>
} 