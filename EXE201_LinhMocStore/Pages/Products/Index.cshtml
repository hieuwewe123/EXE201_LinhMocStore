@page
@model EXE201_LinhMocStore.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Sản phẩm - Linh Mộc Store";
}

<div class="container py-5">
    <div class="row">
        <!-- Sidebar Filters -->
        <div class="col-lg-3 mb-4">
            <div class="filter-sidebar">
                <h4 class="filter-title mb-4">Bộ lọc sản phẩm</h4>
                
                <!-- Search Box -->
                <div class="search-box mb-4">
                    <form method="get" class="d-flex">
                        <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm..." value="@Model.SearchTerm">
                        <button type="submit" class="btn btn-primary ms-2">
                            <i class="fas fa-search"></i>
                        </button>
                    </form>
                </div>

                <!-- Price Range -->
                <div class="filter-section mb-4">
                    <h5 class="filter-section-title">Khoảng giá</h5>
                    <form method="get" id="priceFilterForm">
                        <div class="mb-2">
                            <input type="number" name="minPrice" class="form-control" placeholder="Từ" value="@Model.MinPrice">
                        </div>
                        <div class="mb-2">
                            <input type="number" name="maxPrice" class="form-control" placeholder="Đến" value="@Model.MaxPrice">
                        </div>
                        <button type="submit" class="btn btn-outline-primary w-100">Áp dụng</button>
                    </form>
                </div>

                <!-- Material Filter -->
                <div class="filter-section mb-4">
                    <h5 class="filter-section-title">Chất liệu</h5>
                    <form method="get" id="materialFilterForm">
                        <div class="material-filters">
                            @foreach (var material in Model.Materials)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="materials" value="@material" 
                                           id="material-@material" @(Model.SelectedMaterials?.Contains(material) == true ? "checked" : "")>
                                    <label class="form-check-label" for="material-@material">
                                        @material
                                    </label>
                                </div>
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            <input type="hidden" name="searchTerm" value="@Model.SearchTerm" />
                        }
                        @if (Model.MinPrice.HasValue)
                        {
                            <input type="hidden" name="minPrice" value="@Model.MinPrice" />
                        }
                        @if (Model.MaxPrice.HasValue)
                        {
                            <input type="hidden" name="maxPrice" value="@Model.MaxPrice" />
                        }
                        @if (!string.IsNullOrEmpty(Model.SortBy))
                        {
                            <input type="hidden" name="sortBy" value="@Model.SortBy" />
                        }
                        <button type="submit" class="btn btn-outline-primary w-100 mt-3">Áp dụng bộ lọc</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Product Grid -->
        <div class="col-lg-9">
            <!-- Sort Options -->
            <div class="sort-options mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="results-count">
                        Hiển thị @Model.Products.Count() sản phẩm
                    </div>
                    <div class="sort-dropdown">
                        <form method="get" id="sortForm">
                            @{
                                var sortOptions = new[]
                                {
                                    new { Value = "name_asc", Text = "Tên A-Z" },
                                    new { Value = "name_desc", Text = "Tên Z-A" },
                                    new { Value = "price_asc", Text = "Giá tăng dần" },
                                    new { Value = "price_desc", Text = "Giá giảm dần" }
                                };
                            }
                            <select class="form-select" name="sortBy" onchange="document.getElementById('sortForm').submit()">
                                @foreach (var option in sortOptions)
                                {
                                    if (option.Value == Model.SortBy)
                                    {
                                        <option value="@option.Value" selected>@option.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@option.Value">@option.Text</option>
                                    }
                                }
                            </select>
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <input type="hidden" name="searchTerm" value="@Model.SearchTerm" />
                            }
                            @if (Model.MinPrice.HasValue)
                            {
                                <input type="hidden" name="minPrice" value="@Model.MinPrice" />
                            }
                            @if (Model.MaxPrice.HasValue)
                            {
                                <input type="hidden" name="maxPrice" value="@Model.MaxPrice" />
                            }
                            @if (Model.SelectedMaterials != null)
                            {
                                foreach (var material in Model.SelectedMaterials)
                                {
                                    <input type="hidden" name="materials" value="@material" />
                                }
                            }
                        </form>
                    </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="row">
                @foreach (var product in Model.Products)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 product-card">
                            <div class="card-img-wrapper">
                                <img src="@(string.IsNullOrEmpty(product.Image) ? "/images/no-image.jpg" : product.Image)" 
                                     class="card-img-top" alt="@product.Name">
                                <div class="card-img-overlay d-flex align-items-center justify-content-center">
                                    <a href="/products/details/@product.ProductId" class="btn btn-light btn-sm">Xem chi tiết</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text text-muted small mb-2">
                                    <i class="fas fa-gem me-1"></i> @(string.IsNullOrEmpty(product.Material) ? "Không có thông tin" : product.Material)
                                </p>
                                <p class="card-text text-primary fw-bold mb-3">@product.Price.ToString("N0") VNĐ</p>
                                <div class="d-grid">
                                    <a href="/products/details/@product.ProductId" class="btn btn-primary">Xem chi tiết</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage - 1)@Model.QueryString" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i@Model.QueryString">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage + 1)@Model.QueryString" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            padding-top: 76px !important;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%) !important;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .filter-sidebar {
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .filter-title {
            color: #2c3e50;
            font-weight: 600;
            padding-bottom: 10px;
            border-bottom: 2px solid #f8f9fa;
        }

        .filter-section-title {
            color: #2c3e50;
            font-size: 1.1rem;
            margin-bottom: 15px;
        }

        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: none;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .card-img-wrapper {
            position: relative;
            overflow: hidden;
            padding-top: 100%;
        }

        .card-img-wrapper img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .card-img-overlay {
            background: rgba(0,0,0,0.5);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .card-img-overlay {
            opacity: 1;
        }

        .product-card:hover .card-img-wrapper img {
            transform: scale(1.1);
        }

        .card-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 2.8em;
        }

        .btn-primary {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            border: none;
            padding: 10px 20px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

        .sort-options {
            background: #fff;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .pagination .page-link {
            color: #2c3e50;
            border: none;
            margin: 0 2px;
            border-radius: 5px;
        }

        .pagination .page-item.active .page-link {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            border: none;
        }

        .pagination .page-link:hover {
            background: #f8f9fa;
            color: #3498db;
        }
    </style>
} 