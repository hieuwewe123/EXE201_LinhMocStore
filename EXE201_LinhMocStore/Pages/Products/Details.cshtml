@page "{id:int}"
@model EXE201_LinhMocStore.Pages.Products.DetailsModel
@{
    ViewData["Title"] = $"{Model.Product?.Name} - Linh Mộc Store";
    var isLoggedIn = User.Identity.IsAuthenticated ? "true" : "false";
}

<div class="container py-5">
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert @(Model.Message.Contains("Error") || Model.Message.Contains("không hợp lệ") || Model.Message.Contains("vượt quá") ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
            <i class="fas @(Model.Message.Contains("Error") || Model.Message.Contains("không hợp lệ") || Model.Message.Contains("vượt quá") ? "fa-exclamation-circle" : "fa-check-circle") me-2"></i>
            @Model.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Ảnh sản phẩm -->
        <div class="col-lg-6 mb-4">
            <div class="product-image-container">
                <img src="@(string.IsNullOrEmpty(Model.Product?.Image) ? "/images/no-image.jpg" : Model.Product.Image)" 
                     class="img-fluid rounded product-main-image" 
                     alt="@Model.Product?.Name">
            </div>
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-lg-6">
            <div class="product-details">
                <h1 class="product-title mb-3">@Model.Product?.Name</h1>
                
                <div class="product-price mb-4">
                    <span class="h2 text-primary">@Model.Product?.Price.ToString("N0") VNĐ</span>
                </div>

                <div class="product-meta mb-4">
                    <div class="meta-item">
                        <i class="fas fa-gem me-2"></i>
                        <span>Chất liệu: @(string.IsNullOrEmpty(Model.Product?.Material) ? "Không có thông tin" : Model.Product.Material)</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-ruler me-2"></i>
                        <span>Kích thước: @(string.IsNullOrEmpty(Model.Product?.Size) ? "Không có thông tin" : Model.Product.Size)</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-box me-2"></i>
                        <span class="@(Model.Product?.Quantity <= 5 ? "text-danger" : "")">
                            Số lượng còn lại: @Model.Product?.Quantity
                            @if (Model.Product?.Quantity <= 5 && Model.Product?.Quantity > 0)
                            {
                                <span class="badge bg-warning ms-2">Sắp hết hàng!</span>
                            }
                            else if (Model.Product?.Quantity == 0)
                            {
                                <span class="badge bg-danger ms-2">Hết hàng</span>
                            }
                        </span>
                    </div>
                </div>

                <div class="product-description mb-4">
                    <h5>Mô tả sản phẩm</h5>
                    <p>@(string.IsNullOrEmpty(Model.Product?.Description) ? "Không có mô tả" : Model.Product.Description)</p>
                </div>

                <form method="post" class="add-to-cart-form">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="productId" value="@Model.Product?.ProductId" />
                    @if (Model.Product?.Quantity > 0)
                    {
                        <div class="quantity-selector mb-4">
                            <label for="quantity" class="form-label">Số lượng:</label>
                            <div class="input-group" style="max-width: 150px;">
                                <button type="button" class="btn btn-outline-secondary" onclick="decreaseQuantity()">-</button>
                                <input type="number" 
                                       class="form-control text-center" 
                                       id="quantity" 
                                       name="quantity" 
                                       value="1" 
                                       min="1" 
                                       max="@Model.Product?.Quantity">
                                <button type="button" class="btn btn-outline-secondary" onclick="increaseQuantity()">+</button>
                            </div>
                            <small class="text-muted">Còn lại: <span id="remainingQuantity">@Model.Product?.Quantity</span> sản phẩm</small>
                        </div>
                        <button type="button" class="btn btn-primary btn-lg w-100 mb-3 add-to-cart"
                            data-product-id="@Model.Product?.ProductId"
                            data-product-name="@Model.Product?.Name"
                            data-product-price="@Model.Product?.Price"
                            data-product-image="@Model.Product?.Image"
                            data-stock="@Model.Product?.Quantity"
                            onclick="addDetailToCart()">
                            <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                        </button>
                    }
                    else
                    {
                        <div class="alert alert-warning mb-4">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Sản phẩm này hiện đang hết hàng. Vui lòng quay lại sau!
                        </div>
                        <button type="button" class="btn btn-secondary btn-lg w-100 mb-3" disabled>
                            <i class="fas fa-ban me-2"></i>Hết hàng
                        </button>
                    }
                </form>
            </div>
        </div>
    </div>

    <!-- Sản phẩm liên quan -->
    @if (Model.RelatedProducts?.Any() == true)
    {
        <div class="related-products mt-5">
            <h3 class="section-title mb-4">Sản phẩm liên quan</h3>
            <div class="row">
                @foreach (var product in Model.RelatedProducts)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 product-card">
                            <div class="card-img-wrapper">
                                <img src="@(string.IsNullOrEmpty(product.Image) ? "/images/no-image.jpg" : product.Image)" 
                                     class="card-img-top" alt="@product.Name">
                                <div class="card-img-overlay d-flex align-items-center justify-content-center">
                                    <a href="/products/details/@product.ProductId" class="btn btn-light btn-sm">Xem chi tiết</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text text-primary fw-bold">@product.Price.ToString("N0") VNĐ</p>
                                @if (product.Quantity > 0)
                                {
                                    <a href="/products/details/@product.ProductId" class="btn btn-primary w-100">Xem chi tiết</a>
                                }
                                else
                                {
                                    <button class="btn btn-secondary w-100" disabled>Hết hàng</button>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        const maxQuantity = @(Model.Product?.Quantity ?? 0);

        function showToast(message, isError = false) {
            const toast = document.createElement('div');
            toast.className = 'toast-message' + (isError ? ' error' : '');
            toast.textContent = message;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }

        function increaseQuantity() {
            const quantityInput = document.getElementById('quantity');
            let value = parseInt(quantityInput.value) || 1;
            if (value < maxQuantity) {
                quantityInput.value = value + 1;
            }
        }

        function decreaseQuantity() {
            const quantityInput = document.getElementById('quantity');
            let value = parseInt(quantityInput.value) || 1;
            if (value > 1) {
                quantityInput.value = value - 1;
            }
        }

        async function addDetailToCart() {
            const btn = document.querySelector('.add-to-cart');
            const quantityInput = document.getElementById('quantity');
            const qty = parseInt(quantityInput.value) || 1;
            
            try {
                const res = await fetch('?handler=AddToCartAjax', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ ProductId: parseInt(btn.dataset.productId), Quantity: qty })
                });
                const data = await res.json();
                showToast(data.message, !data.success);
            } catch (error) {
                showToast('Lỗi khi thêm vào giỏ hàng. Vui lòng thử lại.', true);
            }
        }
    </script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            padding-top: 76px !important;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%) !important;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .product-image-container {
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            background: #fff;
            padding: 20px;
        }

        .product-main-image {
            width: 100%;
            height: auto;
            transition: transform 0.3s ease;
        }

        .product-image-container:hover .product-main-image {
            transform: scale(1.05);
        }

        .product-title {
            font-size: 2.5rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .product-meta {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
        }

        .meta-item {
            margin-bottom: 10px;
            color: #6c757d;
        }

        .meta-item:last-child {
            margin-bottom: 0;
        }

        .product-description {
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .quantity-selector .input-group {
            border-radius: 5px;
            overflow: hidden;
        }

        .quantity-selector input {
            border-left: 0;
            border-right: 0;
        }

        .quantity-selector button {
            width: 40px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .btn-outline-secondary {
            color: #6c757d;
        }

        .btn-primary {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            border: none;
            padding: 15px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

        .section-title {
            position: relative;
            padding-bottom: 15px;
            margin-bottom: 30px;
            color: #2c3e50;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100px;
            height: 3px;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        }

        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: none;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .card-img-wrapper {
            position: relative;
            overflow: hidden;
            height: 250px;
        }

        .card-img-wrapper img {
            transition: transform 0.5s ease;
            height: 100%;
            object-fit: cover;
        }

        .product-card:hover .card-img-wrapper img {
            transform: scale(1.1);
        }

        .card-img-overlay {
            background: rgba(0,0,0,0.5);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .card-img-overlay {
            opacity: 1;
        }

        @@media (max-width: 768px) {
            .product-title {
                font-size: 2rem;
            }

            .product-image-container {
                margin-bottom: 30px;
            }
        }

        .toast-message {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #dc3545;
            color: white;
            padding: 1rem 2rem;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 1000;
            animation: slideIn 0.3s ease-out;
        }

        @@keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .badge {
            font-size: 0.8em;
            padding: 0.35em 0.65em;
        }

        .text-danger {
            color: #dc3545 !important;
        }

        .alert-warning {
            background-color: #fff3cd;
            border-color: #ffeeba;
            color: #856404;
        }
    </style>
} 