@page "{id:int}"
@model EXE201_LinhMocStore.Pages.Products.DetailsModel
@{
    ViewData["Title"] = $"{Model.Product?.Name} - Linh Mộc Store";
    var isLoggedIn = User.Identity.IsAuthenticated ? "true" : "false";
    var userRole = HttpContext.Session.GetString("UserRole");
    var isAdmin = userRole == "Admin";
}

<div class="container py-5">
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert @(Model.Message.Contains("Error") || Model.Message.Contains("không hợp lệ") || Model.Message.Contains("vượt quá") ? "alert-danger" : "alert-success") alert-dismissible fade show" role="alert">
            <i class="fas @(Model.Message.Contains("Error") || Model.Message.Contains("không hợp lệ") || Model.Message.Contains("vượt quá") ? "fa-exclamation-circle" : "fa-check-circle") me-2"></i>
            @Model.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (isAdmin)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Chế độ Admin:</strong> Bạn đang xem trang này với quyền quản trị. Chức năng giỏ hàng đã bị ẩn.
            <a href="/admin/dashboard" class="btn btn-sm btn-outline-primary ms-2">Vào Dashboard</a>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Ảnh sản phẩm -->
        <div class="col-lg-6 mb-4">
            <div class="product-image-container">
                <img src="@(string.IsNullOrEmpty(Model.Product?.Image) ? "/images/no-image.jpg" : Model.Product.Image)" 
                     class="img-fluid rounded product-main-image" 
                     alt="@Model.Product?.Name">
            </div>
        </div>

        <!-- Thông tin sản phẩm -->
        <div class="col-lg-6">
            <div class="product-details">
                <h1 class="product-title mb-3">@Model.Product?.Name</h1>
                
                <div class="product-price mb-4">
                    <span class="h2 text-primary">@Model.Product?.Price.ToString("N0") VNĐ</span>
                </div>

                <div class="product-meta mb-4">
                    <div class="meta-item">
                        <i class="fas fa-gem me-2"></i>
                        <span>Chất liệu: @(string.IsNullOrEmpty(Model.Product?.Material) ? "Không có thông tin" : Model.Product.Material)</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-ruler me-2"></i>
                        <span>Kích thước: @(string.IsNullOrEmpty(Model.Product?.Size) ? "Không có thông tin" : Model.Product.Size)</span>
                    </div>
                    <div class="meta-item">
                        <i class="fas fa-box me-2"></i>
                        <span class="@(Model.Product?.Quantity <= 5 ? "text-danger" : "")">
                            Số lượng còn lại: @Model.Product?.Quantity
                            @if (Model.Product?.Quantity <= 5 && Model.Product?.Quantity > 0)
                            {
                                <span class="badge bg-warning ms-2">Sắp hết hàng!</span>
                            }
                            else if (Model.Product?.Quantity == 0)
                            {
                                <span class="badge bg-danger ms-2">Hết hàng</span>
                            }
                        </span>
                    </div>
                </div>

                <div class="product-description mb-4">
                    <h5>Mô tả sản phẩm</h5>
                    <p>@(string.IsNullOrEmpty(Model.Product?.Description) ? "Không có mô tả" : Model.Product.Description)</p>
                </div>

                @if (!Model.isAdmin)
                {
                    <form method="post" class="add-to-cart-form">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="productId" value="@Model.Product?.ProductId" />
                        @if (Model.Product?.Quantity > 0)
                        {
                            <div class="quantity-selector mb-4">
                                <label for="quantity" class="form-label">Số lượng:</label>
                                <div class="input-group" style="max-width: 150px;">
                                    <button type="button" class="btn" onclick="decreaseQuantity()">-</button>
                                    <input type="number" 
                                           class="form-control text-center" 
                                           id="quantity" 
                                           name="quantity" 
                                           value="1" 
                                           min="1" 
                                           max="@Model.Product?.Quantity">
                                    <button type="button" class="btn" onclick="increaseQuantity()">+</button>
                                </div>
                                <small class="text-muted">Còn lại: <span id="remainingQuantity">@Model.Product?.Quantity</span> sản phẩm</small>
                            </div>
                            <button type="button" class="btn btn-primary btn-lg w-100 mb-3 add-to-cart"
                                data-product-id="@Model.Product?.ProductId"
                                data-product-name="@Model.Product?.Name"
                                data-product-price="@Model.Product?.Price"
                                data-product-image="@Model.Product?.Image"
                                data-stock="@Model.Product?.Quantity"
                                onclick="addDetailToCart()">
                                <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                            </button>
                        }
                        else
                        {
                            <div class="alert alert-warning mb-4">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Sản phẩm này hiện đang hết hàng. Vui lòng quay lại sau!
                            </div>
                            <button type="button" class="btn btn-secondary btn-lg w-100 mb-3" disabled>
                                <i class="fas fa-ban me-2"></i>Hết hàng
                            </button>
                        }
                    </form>
                }
                else
                {
                    <div class="admin-actions mb-4">
                        <h5>Quản lý sản phẩm</h5>
                        <div class="d-grid gap-2">
                            <a href="/admin/product/edit/@Model.Product?.ProductId" class="btn btn-warning">
                                <i class="fas fa-edit me-2"></i>Chỉnh sửa sản phẩm
                            </a>
                            <a href="/admin/product" class="btn btn-info">
                                <i class="fas fa-list me-2"></i>Xem danh sách sản phẩm
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Sản phẩm liên quan -->
    @if (Model.RelatedProducts?.Any() == true)
    {
        <div class="related-products mt-5">
            <h3 class="section-title mb-4">Sản phẩm liên quan</h3>
            <div class="row">
                @foreach (var product in Model.RelatedProducts)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 product-card">
                            <div class="card-img-wrapper">
                                <img src="@(string.IsNullOrEmpty(product.Image) ? "/images/no-image.jpg" : product.Image)" 
                                     class="card-img-top" alt="@product.Name">
                                <div class="card-img-overlay d-flex align-items-center justify-content-center">
                                    <a href="/products/details/@product.ProductId" class="btn btn-light btn-sm">Xem chi tiết</a>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text text-primary fw-bold">@product.Price.ToString("N0") VNĐ</p>
                                @if (!Model.isAdmin)
                                {
                                    @if (product.Quantity > 0)
                                    {
                                        <a href="/products/details/@product.ProductId" class="btn btn-primary w-100">Xem chi tiết</a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary w-100" disabled>Hết hàng</button>
                                    }
                                }
                                else
                                {
                                    <a href="/admin/product/edit/@product.ProductId" class="btn btn-warning w-100">
                                        <i class="fas fa-edit me-2"></i>Chỉnh sửa
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        const maxQuantity = @(Model.Product?.Quantity ?? 0);
        const isAdmin = @(Model.isAdmin.ToString().ToLower());
        const isLoggedIn = @(Model.isLoggedIn.ToString().ToLower());

        function showToast(message, isError = false) {
            const container = document.getElementById('toast-container');
            if (!container) return;

            const toast = document.createElement('div');
            toast.className = 'toast-message';
            toast.classList.add(isError ? 'error' : 'success');
            toast.textContent = message;
            
            container.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 400);
            }, 3000);
        }

        function increaseQuantity() {
            if (isAdmin) return;
            const quantityInput = document.getElementById('quantity');
            let value = parseInt(quantityInput.value) || 1;
            if (value < maxQuantity) {
                quantityInput.value = value + 1;
                updateRemainingQuantity();
            }
        }

        function decreaseQuantity() {
            if (isAdmin) return;
            const quantityInput = document.getElementById('quantity');
            let value = parseInt(quantityInput.value) || 1;
            if (value > 1) {
                quantityInput.value = value - 1;
                updateRemainingQuantity();
            }
        }

        function updateRemainingQuantity() {
            const quantityInput = document.getElementById('quantity');
            const remainingSpan = document.getElementById('remainingQuantity');
            const currentQty = parseInt(quantityInput.value) || 1;
            const remaining = maxQuantity - currentQty;
            remainingSpan.textContent = maxQuantity; // Luôn hiển thị tổng số lượng
        }

        document.addEventListener('DOMContentLoaded', function() {
            const quantityInput = document.getElementById('quantity');
            if (quantityInput) {
                quantityInput.addEventListener('input', updateRemainingQuantity);
                updateRemainingQuantity();
            }
            
            const addToCartButton = document.querySelector('.add-to-cart');
            if(addToCartButton) {
                addToCartButton.addEventListener('click', addDetailToCart);
            }
        });

        async function addDetailToCart() {
            const btn = document.querySelector('.add-to-cart');
            if (!btn || btn.disabled) return;
            
            if (isAdmin) {
                showToast('Admin không thể thêm vào giỏ hàng', true);
                return;
            }
            
            if (!isLoggedIn) {
                showToast('Vui lòng đăng nhập để thêm vào giỏ hàng', true);
                return;
            }
            
            const quantityInput = document.getElementById('quantity');
            const qty = parseInt(quantityInput.value) || 1;
            
            if (qty > maxQuantity) {
                showToast('Số lượng vượt quá tồn kho', true);
                return;
            }
            
            const originalHtml = btn.innerHTML;
            btn.disabled = true;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang thêm...';
            
            try {
                const res = await fetch('?handler=AddToCartAjax', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ ProductId: parseInt(btn.dataset.productId), Quantity: qty })
                });
                
                const data = await res.json();
                
                if (data.success) {
                    showToast('Đã thêm vào giỏ hàng thành công!');
                    if (typeof cart !== 'undefined' && cart.updateCartBadge) {
                        cart.updateCartBadge();
                    }
                } else {
                    showToast(data.message || 'Lỗi khi thêm vào giỏ hàng', true);
                }
            } catch (error) {
                showToast('Lỗi kết nối. Vui lòng thử lại.', true);
            } finally {
                btn.disabled = false;
                btn.innerHTML = originalHtml;
            }
        }
    </script>
} 