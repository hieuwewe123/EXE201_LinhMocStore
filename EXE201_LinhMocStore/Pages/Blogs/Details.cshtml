@page "{id:int}"
@model EXE201_LinhMocStore.Pages.Blogs.DetailsModel
@{
    ViewData["Title"] = Model.Blog.Title + " - Linh Mộc Store";
    ViewData["Description"] = Model.Blog.Summary;
}

<!-- Reading Progress Bar -->
<div class="reading-progress" id="readingProgress"></div>

<!-- Blog Detail Hero -->
<section class="blog-detail-hero">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="blog-detail-hero-content text-center">
                    <div class="blog-category-badge">Phong thủy</div>
                    <h1 class="blog-title">@Model.Blog.Title</h1>
                    <div class="blog-meta">
                        <div class="blog-meta-item">
                            <i class="far fa-user"></i>
                            <span>@Model.Blog.Author</span>
                        </div>
                        <div class="blog-meta-item">
                            <i class="far fa-calendar-alt"></i>
                            <span>@Model.Blog.CreatedAt.ToString("dd/MM/yyyy")</span>
                        </div>
                        <div class="blog-meta-item">
                            <i class="far fa-clock"></i>
                            <span>@Model.ReadingTime phút đọc</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Blog Content -->
<section class="blog-detail-container">
    <div class="container">
        <div class="row">
            <!-- Main Content -->
            <div class="col-lg-8">
                <div class="blog-content-card">
                    <!-- Featured Image -->
                    @if (!string.IsNullOrEmpty(Model.Blog.Image))
                    {
                        <div class="blog-featured-image" style="background-image: url('@Model.Blog.Image')"></div>
                    }

                    <!-- Blog Summary -->
                    @if (!string.IsNullOrEmpty(Model.Blog.Summary))
                    {
                        <div class="blog-summary">
                            <p>@Model.Blog.Summary</p>
                        </div>
                    }

                    <!-- Blog Content -->
                    <div class="blog-content">
                        <div class="blog-body">
                            @Html.Raw(Model.Blog.Content)
                        </div>
                    </div>

                    <!-- Social Share -->
                    <div class="social-share">
                        <h5>Chia sẻ bài viết:</h5>
                        <div class="share-buttons">
                            <a href="https://www.facebook.com/sharer/sharer.php?u=@Model.CurrentUrl" 
                               target="_blank" class="share-btn facebook">
                                <i class="fab fa-facebook-f"></i>
                                Facebook
                            </a>
                            <a href="https://twitter.com/intent/tweet?text=@Model.Blog.Title&url=@Model.CurrentUrl" 
                               target="_blank" class="share-btn twitter">
                                <i class="fab fa-twitter"></i>
                                Twitter
                            </a>
                            <a href="https://www.linkedin.com/sharing/share-offsite/?url=@Model.CurrentUrl" 
                               target="_blank" class="share-btn linkedin">
                                <i class="fab fa-linkedin-in"></i>
                                LinkedIn
                            </a>
                            <a href="https://zalo.me/share?u=@Model.CurrentUrl" 
                               target="_blank" class="share-btn zalo">
                                <i class="fas fa-share"></i>
                                Zalo
                            </a>
                        </div>
                    </div>

                    <!-- Author Info -->
                    <div class="blog-author">
                        <div class="author-avatar">
                            <img src="~/images/blog/author-avatar.jpg" alt="@Model.Blog.Author">
                        </div>
                        <div class="author-info">
                            <h5>@Model.Blog.Author</h5>
                            <p>Chuyên gia phong thủy với hơn 10 năm kinh nghiệm trong lĩnh vực vòng đá quý và trang sức may mắn.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Table of Contents -->
                <div class="table-of-contents">
                    <h4>Mục lục</h4>
                    <ul class="toc-list" id="tocList">
                        <!-- Generated by JavaScript -->
                    </ul>
                </div>

                <!-- Related Posts -->
                @if (Model.RelatedBlogs.Any())
                {
                    <div class="related-posts">
                        <h3>Bài viết liên quan</h3>
                        @foreach (var relatedBlog in Model.RelatedBlogs.Take(3))
                        {
                            <div class="related-post-card">
                                <div class="related-post-image" style="background-image: url('@relatedBlog.Image')"></div>
                                <div class="related-post-content">
                                    <h5>@relatedBlog.Title</h5>
                                    <p>@relatedBlog.Summary</p>
                                    <a href="/Blogs/Details/@relatedBlog.BlogId" class="read-more-link">
                                        Đọc thêm <i class="fas fa-arrow-right"></i>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                }

                <!-- Newsletter Signup -->
                <div class="newsletter-signup">
                    <div class="newsletter-card">
                        <h4>Đăng ký nhận tin</h4>
                        <p>Nhận những bài viết mới nhất về phong thủy và vòng đá quý</p>
                        <form class="newsletter-form">
                            <div class="input-group">
                                <input type="email" class="form-control" placeholder="Email của bạn">
                                <button class="btn btn-primary" type="submit">
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <style>
        .newsletter-signup {
            margin-top: 30px;
        }
        
        .newsletter-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 20px;
            text-align: center;
        }
        
        .newsletter-card h4 {
            margin-bottom: 15px;
            font-weight: 600;
        }
        
        .newsletter-card p {
            opacity: 0.9;
            margin-bottom: 20px;
        }
        
        .newsletter-form .input-group {
            background: white;
            border-radius: 25px;
            overflow: hidden;
        }
        
        .newsletter-form .form-control {
            border: none;
            padding: 12px 20px;
        }
        
        .newsletter-form .btn {
            border: none;
            padding: 12px 20px;
            background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        }
        
        .read-more-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .read-more-link:hover {
            color: #764ba2;
        }
    </style>
}

@section Scripts {
    <script>
        // Reading Progress Bar
        window.addEventListener('scroll', () => {
            const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
            const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
            const scrolled = (winScroll / height) * 100;
            document.getElementById('readingProgress').style.width = scrolled + '%';
        });

        // Table of Contents Generation
        document.addEventListener('DOMContentLoaded', function() {
            const content = document.querySelector('.blog-body');
            const tocList = document.getElementById('tocList');
            
            if (content && tocList) {
                const headings = content.querySelectorAll('h2, h3, h4');
                
                headings.forEach((heading, index) => {
                    // Add ID to heading
                    heading.id = `heading-${index}`;
                    
                    // Create TOC item
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.href = `#heading-${index}`;
                    a.textContent = heading.textContent;
                    a.className = `toc-${heading.tagName.toLowerCase()}`;
                    
                    li.appendChild(a);
                    tocList.appendChild(li);
                });
            }
        });

        // Smooth scrolling for TOC links
        document.querySelectorAll('.toc-list a').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = link.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Active TOC highlighting
        window.addEventListener('scroll', () => {
            const headings = document.querySelectorAll('.blog-body h2, .blog-body h3, .blog-body h4');
            const tocLinks = document.querySelectorAll('.toc-list a');
            
            let current = '';
            
            headings.forEach((heading, index) => {
                const rect = heading.getBoundingClientRect();
                if (rect.top <= 100) {
                    current = `#heading-${index}`;
                }
            });
            
            tocLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === current) {
                    link.classList.add('active');
                }
            });
        });
    </script>
} 